@use 'sass:map';
@use '@angular/material' as mat;
@import '@angular/material/theming';

@mixin color($theme) {
  $color-config: mat.get-color-config($theme);
  $primary-palette: map.get($color-config, 'primary');
  $accent-palette: map.get($color-config, 'accent');

  $primary100: mat.get-color-from-palette($primary-palette, 100);
  $primary100-contrast: mat.get-color-from-palette(
    $primary-palette,
    100-contrast
  );

  .messages-window {
    &__toggle-button {
      background-color: mat.get-color-from-palette(
        $accent-palette,
        500
      ) !important;
      & .mat-badge-content {
        background: mat.get-color-from-palette($primary-palette, 400);
      }
    }
    &__card {
      background-color: $primary100 !important;
      box-shadow: 0 0 1.5rem 0 rgb(1, 0, 0) inset !important;
    }

    &__header {
      color: $primary100-contrast;
      background-color: $primary100;
      border-color: $primary100-contrast;
      box-shadow: 0 0.14rem 0.28rem 0 rgba(0.9, 0, 0.2);
    }

    &__content {
      background-color: mat.get-color-from-palette(
        $primary-palette,
        900-contrast
      );
      box-shadow: 0 0.01rem 0.5rem 0 rgb(1, 0, 0) inset;
    }

    &__message {
      background-color: mat.get-color-from-palette(
        $primary-palette,
        50
      ) !important;
      color: $primary100-contrast;
      box-shadow: 0 0.01rem 0.2rem 0 rgb(1, 0, 0) inset;
    }

    &__message-time {
      color: $primary100-contrast;
    }

    &__close-button,
    &__clear-button {
      background-color: mat.get-color-from-palette(
        $accent-palette,
        400
      ) !important;
    }
  }
}

@mixin typography($typography-config) {
  //  TODO: Future development
}

@mixin theme($theme, $typography-config) {
  $color-config: mat.get-color-config($theme);
  @if $color-config != null {
    @include color($theme);
  }

  @if $typography-config != null {
    @include typography($typography-config);
  }
}
