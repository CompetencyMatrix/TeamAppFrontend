@use 'sass:map';
@use '@angular/material' as mat;
@import "@angular/material/theming";

@mixin color($theme) {
  $color-config: mat.get-color-config($theme);
  $primary-palette: map.get($color-config, 'primary');
  $accent-palette: map.get($color-config, 'accent');
  $warn-palette: map.get($color-config, 'warn');

  $primary500: mat.get-color-from-palette($primary-palette, 500);
  $accent500: mat.get-color-from-palette($accent-palette, 500);
  $primary500-contrast: mat.get-color-from-palette($primary-palette, 500-contrast);
  $primary200: mat.get-color-from-palette($primary-palette, 200);
  $primary200-contrast: mat.get-color-from-palette($primary-palette, 200-contrast);

  .messages-window {
    &__card {
      background-color: mat.get-color-from-palette($primary-palette, 700) !important;
    }

    &__header {
      color: mat.get-color-from-palette($primary-palette, 800-contrast);
      background-color: mat.get-color-from-palette($primary-palette, 800);
      border-color: mat.get-color-from-palette($primary-palette, 200-contrast);
      box-shadow: 0 0.14rem 0.28rem 0 rgba(0.9,0,0.20);
    }


    &__content {
      background-color: mat.get-color-from-palette($primary-palette, 50);
      box-shadow: 0 0.01rem 0.5rem 0 rgb(1, 0, 0) inset;
    }

    &__message {
      background-color: mat.get-color-from-palette($primary-palette, 200)!important;
      box-shadow: 0 0.01rem 0.2rem 0 rgb(1, 0, 0) inset;
    }

    &__message-time {
      color: mat.get-color-from-palette($primary-palette, 800);
    }
  }
}

@mixin typography($typography-config) {
  //  TODO: Future development
}


@mixin theme($theme, $typography-config) {
  $color-config: mat.get-color-config($theme);
  @if $color-config != null {
    @include color($theme);
  }

  @if $typography-config != null {
    @include typography($typography-config);
  }
}

